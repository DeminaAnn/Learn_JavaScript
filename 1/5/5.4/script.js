// Давайте произведём 5 операций с массивом.
//
//     Создайте массив styles с элементами «Джаз» и «Блюз».
// Добавьте «Рок-н-ролл» в конец.
//     Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
//     Удалите первый элемент массива и покажите его.
//     Вставьте Рэп и Регги в начало массива.
//     Массив по ходу выполнения операций:
// Джаз, Блюз
// Джаз, Блюз, Рок-н-ролл
// Джаз, Классика, Рок-н-ролл
// Классика, Рок-н-ролл
// Рэп, Регги, Классика, Рок-н-ролл

let styles = ["Джаз", "Блюз"];
styles.push("Рок-н-ролл");
styles[1] = "Классика";
styles.shift();
alert( styles );
styles.unshift("Рэп", "Регги");

// Напишите функцию sumInput(), которая:
//
// Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
//     Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, пустую строку или нажмёт «Отмена».
// Подсчитывает и возвращает сумму элементов массива.
//     P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

function sumInput(){
    let arrayOfNumbers = [];
    let i = 0;
    while (true) {
        let currentNumber = prompt("Введите число");
        if (!(currentNumber === null || currentNumber === '' || !isFinite(currentNumber))) {
            arrayOfNumbers[i] = +currentNumber;
            i++;
        } else {
            break;
        }
    }

    let sum = 0;
    for (let number of arrayOfNumbers) {
        sum += number;
    }
    return sum;
}

alert ( sumInput() );

// На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].
//
//     Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.
//
//     Функция getMaxSubSum(arr) должна возвращать эту сумму.
//
//     Например:
//
// getMaxSubSum([-1, 2, 3, -9]) == 5 (сумма выделенных элементов)
// getMaxSubSum([2, -1, 2, 3, -9]) == 6
// getMaxSubSum([-1, 2, 3, -9, 11]) == 11
// getMaxSubSum([-2, -1, 1, 2]) == 3
// getMaxSubSum([100, -9, 2, -3, 5]) == 100
// getMaxSubSum([1, 2, 3]) == 6 (берём все)
// Если все элементы отрицательные – ничего не берём(подмассив пустой) и сумма равна «0»:
//
// getMaxSubSum([-1, -2, -3]) = 0
// Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций.

function getMaxSubSum(arr){
    let sum = 0;
    let max = 0;
    for (let i = 0; i < arr.length; i++){
        sum += arr[i];
        max = Math.max(max, sum);
        if (sum < 0) sum = 0;
    }
    return max;
}

alert ( getMaxSubSum([-1, 2, 3, -9]) );
alert ( getMaxSubSum([2, -1, 2, 3, -9]) );
